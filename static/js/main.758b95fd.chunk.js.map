{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","focusPosition","maxFocusPositionOfAllIcons","props","itemWidth","frameSize","images","length","onPrevHandler","step","infinite","setState","prevState","onNextHandler","this","animationDuration","disablePrevButton","disableNextButton","className","style","width","map","imgLink","transform","transition","src","alt","type","disabled","onClick","React","Component","App","onChangeWidth","event","target","value","onChangeFrameSize","onChangeStep","onChangeAnimationDuration","onChangeInfinite","defaultValue","onChange","min","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.758b95fd.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport { CarouselValues } from '../types/carousel';\n\ntype State = {\n  focusPosition: number;\n};\n\nclass Carousel extends React.Component<CarouselValues, State> {\n  state = {\n    focusPosition: 0,\n  };\n\n  maxFocusPositionOfAllIcons = () => {\n    const {\n      itemWidth,\n      frameSize,\n    } = this.props;\n\n    return -((this.props.images.length - frameSize) * itemWidth);\n  };\n\n  onPrevHandler = () => {\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const { focusPosition } = this.state;\n\n    if (infinite && focusPosition >= 0) {\n      this.setState({\n        focusPosition: this.maxFocusPositionOfAllIcons(),\n      });\n\n      return;\n    }\n\n    this.setState(prevState => {\n      return { focusPosition: prevState.focusPosition + (+step * itemWidth) };\n    });\n  };\n\n  onNextHandler = () => {\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const { focusPosition } = this.state;\n\n    if (\n      infinite\n      && focusPosition\n      <= this.maxFocusPositionOfAllIcons()) {\n      this.setState({ focusPosition: 0 });\n\n      return;\n    }\n\n    this.setState(prevState => {\n      return { focusPosition: prevState.focusPosition - (+step * itemWidth) };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      infinite,\n      animationDuration,\n    } = this.props;\n    const { focusPosition } = this.state;\n\n    const disablePrevButton = focusPosition >= 0 && !infinite;\n    const disableNextButton = focusPosition\n    <= this.maxFocusPositionOfAllIcons() && !infinite;\n\n    return (\n      <div className=\"Carousel\">\n        <div>\n          <ul\n            style={{ width: frameSize * itemWidth }}\n            className=\"Carousel__list\"\n          >\n            {images.map((imgLink: string) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  key={imgLink}\n                >\n                  <img\n                    style={{\n                      width: +itemWidth,\n                      transform: `translateX(${focusPosition}px)`,\n                      transition: `${animationDuration}ms`,\n                    }}\n                    src={imgLink}\n                    alt={imgLink}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n\n          <div className=\"Carousel__buttons\">\n            <button\n              type=\"button\"\n              disabled={disablePrevButton}\n              onClick={this.onPrevHandler}\n            >\n              &#8592;\n            </button>\n            <button\n              data-cy=\"next\"\n              type=\"button\"\n              disabled={disableNextButton}\n              onClick={this.onNextHandler}\n            >\n              &#8594;\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { CarouselValues } from './types/carousel';\n\nclass App extends React.Component<{}, CarouselValues> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    itemWidth: 130,\n    step: 3,\n    frameSize: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  onChangeWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  onChangeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  onChangeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  onChangeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  onChangeInfinite = () => {\n    this.setState(prevState => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      step,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n\n        <form className=\"App__form\">\n          <label>\n            <span>Item width </span>\n            <input\n              type=\"number\"\n              value={itemWidth}\n              className=\"App__input\"\n              defaultValue={130}\n              step={5}\n              onChange={this.onChangeWidth}\n              min={130}\n            />\n          </label>\n\n          <label>\n            <span>Frame size </span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              value={frameSize}\n              step={1}\n              onChange={this.onChangeFrameSize}\n              min={1}\n            />\n          </label>\n\n          <label>\n            <span>Step </span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              value={step}\n              onChange={this.onChangeStep}\n              min={1}\n            />\n          </label>\n\n          <label>\n            <span>Animation duration </span>\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              onChange={this.onChangeAnimationDuration}\n            />\n          </label>\n\n          <label>\n            <span>Infinite </span>\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.onChangeInfinite}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}